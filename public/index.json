[
{
	"uri": "http://mwidener.github.io/lecture3/lec3_1/",
	"title": "GeoJSON components",
	"tags": [],
	"description": "",
	"content": " A Feature type is a spatial object\n Has geometry and properties It is possible to have multiple geometries, but this is very rare A FeatureCollection type Object that has feature objects\n{ \u0026quot;type\u0026quot;: \u0026quot;FeatureCollection\u0026quot;, \u0026quot;features\u0026quot;: [ { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: {\u0026quot;type\u0026quot;: \u0026quot;Point\u0026quot;, \u0026quot;coordinates\u0026quot;: [102.0, 0.5]}, \u0026quot;properties\u0026quot;: {\u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;} }, { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;LineString\u0026quot;, \u0026quot;coordinates\u0026quot;: [ [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0] ] }, \u0026quot;properties\u0026quot;: { \u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;, \u0026quot;prop1\u0026quot;: 0.0 } }, { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;Polygon\u0026quot;, \u0026quot;coordinates\u0026quot;: [ [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ] ] }, \u0026quot;properties\u0026quot;: { \u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;, \u0026quot;prop1\u0026quot;: {\u0026quot;this\u0026quot;: \u0026quot;that\u0026quot;} } } ] }    "
},
{
	"uri": "http://mwidener.github.io/lecture1/lec1_1/",
	"title": "Review of Course Structure",
	"tags": [],
	"description": "",
	"content": " For ‘letter marked’ assignments, I will use the Faculty of Arts and Sciences marking criteria.\nSee syllabus for course policies on accessibility, accommodation, academic integrity and late assignments.\nThis course will have a lot of new material for most people, so as a general rule, it\u0026rsquo;s best to keep an open line of communication with me!\nMaterials  Text editor  This is where you will write down and edit your code. A good editor is key! I recommend Atom or Sublime  Mapbox Account  www.mapbox.com  Lynda Access  access via this link to lynda at uoft  google or yahoo or bing or alta vista or whatever\u0026hellip;  "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_1/",
	"title": "Strengths/Weaknesses of Web Maps",
	"tags": [],
	"description": "",
	"content": " Strengths of Web Maps Easy to:  keep up to date distribute personalize collaborate\nCheap diverse array of open source software\n  Different types of data Integration with other types of info online Weaknesses of Web Maps Steep learning curve for advanced work Not necessarily best platform for complex computation Different platform types means many things to learn Having info online means security/maintenance concerns that differ from conventional GIS "
},
{
	"uri": "http://mwidener.github.io/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": " Welcome to Developing Web Maps! Welcome to GGR 472: Developing Web Maps - Winter 2020. In this class we will explore how web maps are designed and created, using the MapBox GL JS API.\nCourse Overview Typically this course will consist of about one hour of lecture and then about an hour of hands-on development. Over the course of the term, we'll explore:   what web maps are good for, and what they\u0026rsquo;re less good for, what kinds of spatial data they use, how design considerations change for viewing spatial data online numerous interactive features, and how to do basic GIS online.\n  A note on coding: Given that we'll be using JavaScript, HTML, and CSS in this class, it is strongly recommended that students either have some previous experience with programming or commit to doing a little extra skills development outside of class. Part of the first week of class and the first assignment are dedicated to learning these languages, but you will likely need to keep up the training as we continue through the term. Like anything, you'll get better with these languages with practice! Don\u0026rsquo;t be this guy: "
},
{
	"uri": "http://mwidener.github.io/lecture1/lec1_2/",
	"title": "Programming",
	"tags": [],
	"description": "",
	"content": " Programming is important! We\u0026rsquo;ll be using three languages: * JavaScript * HTML * CSS\nWhy do we need to program?  You can handle bigger projects and more data through automation and logic. This is the standard way that serious web mapping and web GIS is done. It looks great on your resume!  HTML  HyperText Markup Language  Files sent from servers to personal computers They tell the computer things like what to display or where to get data  HTML elements tell us things about where text should go, how it should be displayed, if an image should be centered  We express HTML elements through HTML tags \u0026lt;html\u0026gt; ... \u0026lt;/html\u0026gt;  http://html.com/document/  CSS  Cascading Style Sheet  “Style sheet” code used to style the content of a web page. Interacts with HTML and describes how things should be sized, coloured, etc. Can be more complicated  Helps separate the website content from website styling  Reduces repetition if you have multiple HTML docs  http://www.w3schools.com/css/default.asp  JavaScript  The de facto lingua franca of the world wide web Controls the behaviour of a webpage  HTML and CSS just describe  Javascript is a programming language  Conditional statements Logic Looping Data manipulation/handling   "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_2/",
	"title": "Classification of Web Maps",
	"tags": [],
	"description": "",
	"content": " Classifying Web Maps A 2001 paper by Jan Kraak attempted to classify web maps  Web Maps  static maps view only interactive interface/contents dynamic maps view only interactive interface/contents   Other ways to think about web maps  Analytical web maps  Basically GIS online  Animated/Realtime web maps  Constantly updated maps showing changes in spatial locations  Collaborative web maps  Teams contribute to a single spatial representation online  Online atlases  Static collections of production quality maps that were formerly printed as books, can be interactive  Static web maps  Pages with maps that have no interactivity   "
},
{
	"uri": "http://mwidener.github.io/introduction/",
	"title": "Course Information",
	"tags": [],
	"description": "",
	"content": " This section has information about the course structure and where you can go to get help. "
},
{
	"uri": "http://mwidener.github.io/lecture1/lec1_3/",
	"title": "Basic Programming Concepts",
	"tags": [],
	"description": "",
	"content": " Basic Programming Concepts Variable assignment var x = 12 var blah = \u0026quot;some text that i'm writing right now!\u0026quot; blah = x y = blah - x  Arrays var universities = [\u0026quot;UofT\u0026quot;, \u0026quot;Western\u0026quot;, \u0026quot;McMaster\u0026quot;]; universities[0] //will return \u0026quot;UofT\u0026quot;  Conditional statements if (condition) { // block of code to be executed if the condition is true }  An example from https://www.w3schools.com/js/js_if_else.asp\nif (hour \u0026lt; 18) { greeting = \u0026quot;Good day\u0026quot;; } else { greeting = \u0026quot;Good evening\u0026quot; }  What would this return now?\nLoops var i; for (i = 0; i \u0026lt; universities.length; i++) { text += universities[i] + \u0026quot;\u0026lt;br\u0026gt;\u0026quot;; } /*will print: UofT Western McMaster */  To the board! "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_3/",
	"title": "Making Web Maps",
	"tags": [],
	"description": "",
	"content": " How do we make web maps Approach depends on factors that are similar to how you develop conventional GISystems  Audience Scope Refresh rate Collaboration strategy\nNew dimensions interactivity\n Realtime\n linkages to other online resources\n  Group exercise!  Find an online map on a website that isn’t a major web map provider (e.g. google, microsoft, etc.)  Describe the purpose of the map List any interactivity/features Does the map serve its purpose well? What additional features might be nice to have?   "
},
{
	"uri": "http://mwidener.github.io/lecture1/",
	"title": "Lecture 1: Intro",
	"tags": [],
	"description": "",
	"content": " Lecture 1 What are web maps? What is this class about?  Investigating the history of web maps Exploring a range of web mapping tools Exploring a range of development methods Group work developing your own web map  "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_4/",
	"title": "Spatial Data",
	"tags": [],
	"description": "",
	"content": " Spatial Data Review Refresher:  Points Lines Polygons  How do we deal with these things in a computer?\nData Model  a set of constructs for describing and representing selected aspects of the real world in a computer. We need a model because the real world is infinitely complex.  Raster files: ncols 480 nrows 450 xllcorner 378923 yllcorner 4072345 cellsize 30 nodata_value -32768 43 2 45 7 3 56 2 5 23 65 34 6 32 54 57 34 2 2 54 6 ... 35 45 65 34 2 6 78 4 2 6 89 3 2 7 45 23 5 8 4 1 62 ... 43 2 45 7 3 56 2 5 23 65 34 6 32 54 57 34 2 2 54 6 ... 35 45 65 34 2 6 78 4 2 6 89 3 2 7 45 23 5 8 4 1 62 ... 43 2 45 7 3 56 2 5 23 65 34 6 32 54 57 34 2 2 54 6 ... 35 45 65 34 2 6 78 4 2 6 89 3 2 7 45 23 5 8 4 1 62 ...  Vector Data Model  More commonly associated with discrete data Concepts Three general geometric types  Point Polyline Polygon   How do these look in the computer? It depends\u0026hellip; At the most basic level: What about shapefiles? This is a lot of information and not particularly efficient. That leads us to web mapping. Are shapefiles the way to go? Well, to understand why they aren\u0026rsquo;t, it\u0026rsquo;s helpful to understand a little about the internet.\n Packet switching  Data are broken into small chunks and passed from an origin to a destination Allows for many routes to the destination computer  Servers  Electronic filing cabinets that pass information when requested  Clients  Computers that get information from servers   "
},
{
	"uri": "http://mwidener.github.io/lecture2/",
	"title": "Lecture 2: Data",
	"tags": [],
	"description": "",
	"content": " What are web maps? Web maps are just maps on the internet. They can be static or interactive \u0026hellip; but nowadays they\u0026rsquo;re mostly interactive.\nEasy way to diffuse spatial information and provide interactivity.\nWeb maps help move geographic information systems and sciences to the world wide web.\nWeb mapping consists of three major components:  geography information the Web  In this class we\u0026rsquo;re moving in a different direction than many of your previous GIS courses. How can we use the web to make mapping useful in new and different ways?\n"
},
{
	"uri": "http://mwidener.github.io/lecture3/",
	"title": "Lecture 3: Data, cont.",
	"tags": [],
	"description": "",
	"content": " Recall js objects? var mycar = \u0026quot;subaru\u0026quot;; // name: value pairs (name/value separated by colon) var mycar = { make: \u0026quot;Subaru\u0026quot;, model: \u0026quot;Impreza\u0026quot;, year: 2005, states_provinces_driven_through: [\u0026quot;ontario\u0026quot;, \u0026quot;new york\u0026quot;, \u0026quot;michigan\u0026quot;]; };  What would this return? mycar.make  This leads us to geoJSON: Geographic Java Script Object Notation GeoJSON is a simple open standard used to store spatial features, alongside non-spatial features. { \u0026quot;type\u0026quot;: \u0026quot;FeatureCollection\u0026quot;, \u0026quot;features\u0026quot;: [ { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: {\u0026quot;type\u0026quot;: \u0026quot;Point\u0026quot;, \u0026quot;coordinates\u0026quot;: [102.0, 0.5]}, \u0026quot;properties\u0026quot;: {\u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;} }, { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;LineString\u0026quot;, \u0026quot;coordinates\u0026quot;: [ [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0] ] }, \u0026quot;properties\u0026quot;: { \u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;, \u0026quot;prop1\u0026quot;: 0.0 } }, { \u0026quot;type\u0026quot;: \u0026quot;Feature\u0026quot;, \u0026quot;geometry\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;Polygon\u0026quot;, \u0026quot;coordinates\u0026quot;: [ [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ] ] }, \u0026quot;properties\u0026quot;: { \u0026quot;prop0\u0026quot;: \u0026quot;value0\u0026quot;, \u0026quot;prop1\u0026quot;: {\u0026quot;this\u0026quot;: \u0026quot;that\u0026quot;} } } ] }  "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_5/",
	"title": "Spatial Data for the Web",
	"tags": [],
	"description": "",
	"content": " Other formats more common in web world Many other, compact data structures that work better for online transmission/compression\nOne major format is based off of markup languages.\n What is XML?  Extensible Markup Language Store/transport data Human and machine readable  XML doesn’t do anything  Information wrapped in tags XML carries data, HTML designed to display data XML doesn’t have predefined tags (e.g. ), HTML does   XML Example: \u0026lt;note\u0026gt; \u0026lt;to\u0026gt;Tove\u0026lt;/to\u0026gt; \u0026lt;from\u0026gt;Jani\u0026lt;/from\u0026gt; \u0026lt;heading\u0026gt;Reminder\u0026lt;/heading\u0026gt; \u0026lt;body\u0026gt;Don't forget me this weekend!\u0026lt;/body\u0026gt; \u0026lt;/note\u0026gt;  A computer program reads the tags and displays the text based on predefined rules\nNOTE To: Tove From: Jani Reminder Don\u0026rsquo;t forget about the milk! "
},
{
	"uri": "http://mwidener.github.io/introduction/syllabus/",
	"title": "Syllabus",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://mwidener.github.io/introduction/instructor_info/",
	"title": "Instructor Information",
	"tags": [],
	"description": "",
	"content": " Prof. Michael Widener email michael michael DOT widener AT utoronto DOT ca\noffice hours: Thursdays 1pm - 3pm Sid Smith Hall 5037\nAdditional resources  Mapbox GL JS API Mapbox GL JS Examples  "
},
{
	"uri": "http://mwidener.github.io/lecture2/lec2_6/",
	"title": "GML KML OSM-XML",
	"tags": [],
	"description": "",
	"content": " GML GML defines a variety of object types: * Features * Coordinate reference systems * Geometry (simple and complex) * Topology * Time * Units of Measure * Generalized values\nGML geometries: * Point * LineString * Polygon * Newer versions of GML have the ability to represent coverages/raster\n\u0026lt;gml:Polygon\u0026gt; \u0026lt;gml:outerBoundaryIs\u0026gt; \u0026lt;gml:LinearRing\u0026gt; \u0026lt;gml:coordinates\u0026gt;0,0 100,0 100,100 0,100 0,0\u0026lt;/gml:coordinates\u0026gt; \u0026lt;/gml:LinearRing\u0026gt; \u0026lt;/gml:outerBoundaryIs\u0026gt; \u0026lt;/gml:Polygon\u0026gt; \u0026lt;gml:Point\u0026gt; \u0026lt;gml:coordinates\u0026gt;100,200\u0026lt;/gml:coordinates\u0026gt; \u0026lt;/gml:Point\u0026gt; \u0026lt;gml:LineString\u0026gt; \u0026lt;gml:coordinates\u0026gt;100,200 150,300\u0026lt;/gml:coordinates\u0026gt; \u0026lt;/gml:LineString\u0026gt;  KML KML extends GML and maintains an open standard: OpenGIS KML Encoding Standard\nFour basic ways to display data:  Placemarks Polylines Polygons Overlays  Difference between polylines and polygons is the first and last point is the same for polygons.\nExamples of how KML can be used here.\nOSM XML OpenStreetMap XML is tag based, but not standardized in practice. It\u0026rsquo;s based on XML, with different tags than GML/KML.\nGeometries: * Node * Way * Closed way\n\u0026lt;node id=\u0026quot;60006651\u0026quot; visible=\u0026quot;true\u0026quot; version=\u0026quot;8\u0026quot; changeset=\u0026quot;14929023\u0026quot; timestamp=\u0026quot;2013-02-06T02:06:38Z\u0026quot; user=\u0026quot;andrewpmk\u0026quot; uid=\u0026quot;1679\u0026quot; lat=\u0026quot;43.6629666\u0026quot; lon=\u0026quot;-79.3974730\u0026quot;/\u0026gt; \u0026lt;way id=\u0026quot;8027962\u0026quot; visible=\u0026quot;true\u0026quot; version=\u0026quot;13\u0026quot; changeset=\u0026quot;29433309\u0026quot; timestamp=\u0026quot;2015-03-12T19:30:13Z\u0026quot; user=\u0026quot;andrewpmk\u0026quot; uid=\u0026quot;1679\u0026quot;\u0026gt; \u0026lt;nd ref=\u0026quot;60006651\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;2143468180\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006652\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006653\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006655\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006647\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006648\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006649\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006650\u0026quot;/\u0026gt; \u0026lt;nd ref=\u0026quot;60006651\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;addr:city\u0026quot; v=\u0026quot;Toronto\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;addr:country\u0026quot; v=\u0026quot;CA\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;addr:housenumber\u0026quot; v=\u0026quot;73-75\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;addr:province\u0026quot; v=\u0026quot;ON\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;addr:street\u0026quot; v=\u0026quot;St. George Street\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;building\u0026quot; v=\u0026quot;university\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;college\u0026quot; v=\u0026quot;University College\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;name\u0026quot; v=\u0026quot;Sir Daniel Wilson Residence (University College)\u0026quot;/\u0026gt; \u0026lt;tag k=\u0026quot;operator\u0026quot; v=\u0026quot;University of Toronto\u0026quot;/\u0026gt; \u0026lt;/way\u0026gt;  Go to OpenStreetMap and download some data. Inspect nodes/ways/closed ways. "
},
{
	"uri": "http://mwidener.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://mwidener.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]